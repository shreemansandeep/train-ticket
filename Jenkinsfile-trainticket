pipeline{
  agent any
    stages{
    
      stage("Git Checkout"){
        steps{
              git credentialsId: 'GitID', url: 'https://github.com/shreemansandeep/Train-Ticket-Reservation-System.git'
        }
      }
      
      stage("Unit testing"){
       steps{
              sh 'mvn test'
             }
        }
        
      stage("Integration testing"){
                steps{
                      sh 'mvn verify -DskipUnitTests'
                }
        }

      stage("Maven Build"){
      steps{
          sh "mvn clean install"
  
    }
}

stage("Static code analysis"){
      steps{
      script{
          withSonarQubeEnv(credentialsId: 'sonartoken') {
          sh "mvn clean package sonar:sonar"
          }
        }
    }
}

stage("Quality Gate Status"){
    steps{
    script{
          waitForQualityGate abortPipeline: false, credentialsId: 'sonartoken'
          }
        }
    }
    
    stage("Upload War To Nexus"){
      steps{
        script{
        
        def pom = readMavenPom file: 'pom.xml'
                
        def nexusRepo = pom.version.endsWith("SNAPSHOT") ? "train-snapshot" : "train-release"
        
        nexusArtifactUploader artifacts: [
        [
        artifactId: 'TrainBook', 
        classifier: '', 
        file: 'target/trainticketsystem.war', 
        type: 'war'
        ]
        ], 
        credentialsId: 'nexus-auth', 
        groupId: 'TrainBook', 
        nexusUrl: '3.109.184.120:8081', 
        nexusVersion: 'nexus3', 
        protocol: 'http', 
        repository: nexusRepo, 
        version: "${pom.version}"
        }
      }
    }


      
    }
}
