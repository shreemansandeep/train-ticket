pipeline{

    agent any

    tools {
        jdk 'jdk17'
        maven 'maven3'
    }

    stages{

        stage ('clean Workspace'){
            steps{
                cleanWs()
            }
        }

        stage ('checkout scm') {
            steps {
                git 'https://github.com/shreemansandeep/Train-Ticket-Reservation-System.git'
            }
        }

        stage ('maven compile') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage ('maven Test') {
            steps {
                sh 'mvn test'
            }
        }

    stage("Static code analysis"){
              steps{
              script{
                  withSonarQubeEnv(credentialsId: 'sonartoken') {
                  sh "mvn sonar:sonar"
                  }
                }
            }
        }

    stage ('Build war file'){
            steps{
                sh 'mvn clean install -DskipTests=true'
            }
        }

    stage("OWASP Dependency Check"){
            steps{
                dependencyCheck additionalArguments: '--scan ./ --format XML ', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage ('Build and push to docker hub'){
            steps{
                script{
                    withDockerRegistry(credentialsId: 'Dockrhub-Cred', toolName: 'Docker') {
                        sh "docker build -t $JOB_NAME:v1.$BUILD_ID ."
                        sh "docker tag $JOB_NAME:v1.$BUILD_ID dockersandheep/$JOB_NAME:v1.$BUILD_ID"
                        sh "docker push dockersandheep/$JOB_NAME:v1.$BUILD_ID"
                   }
                }
            }
        }

        stage("TRIVY"){
            steps{
                sh "trivy image dockersandheep/$JOB_NAME:v1.$BUILD_ID > trivy.txt"
            }
        }



   }
}
